#!/bin/bash

# Bulk Code Integration Test Runner
# This script runs comprehensive integration tests for bulk code functionality

echo "üöÄ Bulk Code Integration Test Runner"
echo "===================================="

# Check if required environment files exist
if [ ! -f ".env.local" ]; then
    echo "‚ùå Error: .env.local file not found"
    echo "Please create .env.local with required Supabase configuration"
    exit 1
fi

# Check if Node.js is available
if ! command -v node &> /dev/null; then
    echo "‚ùå Error: Node.js is not installed"
    exit 1
fi

# Check if required environment variables are set
echo "üîç Checking environment configuration..."

# Source the environment file to check variables
set -a
source .env.local
set +a

if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ]; then
    echo "‚ùå Error: NEXT_PUBLIC_SUPABASE_URL not set in .env.local"
    exit 1
fi

if [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
    echo "‚ùå Error: SUPABASE_SERVICE_ROLE_KEY not set in .env.local"
    exit 1
fi

echo "‚úÖ Environment configuration looks good"

# Install dependencies if needed
if [ ! -d "node_modules" ]; then
    echo "üì¶ Installing dependencies..."
    npm install
fi

echo ""
echo "üß™ Running Bulk Code Integration Tests..."
echo "========================================"

# Run the integration tests
node tests/bulk-code-integration-tests.js

# Capture the exit code
TEST_EXIT_CODE=$?

echo ""
if [ $TEST_EXIT_CODE -eq 0 ]; then
    echo "üéâ All integration tests completed successfully!"
    echo ""
    echo "üìã Test Coverage Summary:"
    echo "‚Ä¢ End-to-end bulk code creation and usage flow"
    echo "‚Ä¢ Concurrent user login scenarios up to capacity limit"
    echo "‚Ä¢ Capacity exceeded rejection and error handling"
    echo "‚Ä¢ Race condition handling with concurrent access"
    echo "‚Ä¢ Automatic expiration and session cleanup"
    echo "‚Ä¢ Usage tracking API integration"
    echo ""
    echo "‚úÖ Requirements Verified:"
    echo "‚Ä¢ 1.1: Bulk code creation with capacity limits (1-400)"
    echo "‚Ä¢ 2.1: Users can access via bulk codes when capacity allows"
    echo "‚Ä¢ 2.2: Usage counter increments on successful login"
    echo "‚Ä¢ 2.3: Capacity exceeded rejection with appropriate error"
    echo "‚Ä¢ 2.4: Atomic operations prevent race conditions"
    echo "‚Ä¢ 4.1: Automatic expiration and session cleanup"
else
    echo "‚ùå Integration tests failed with exit code $TEST_EXIT_CODE"
    echo ""
    echo "üîß Troubleshooting Tips:"
    echo "‚Ä¢ Check that your Supabase database is running and accessible"
    echo "‚Ä¢ Verify that all required database functions exist:"
    echo "  - check_bulk_code_capacity()"
    echo "  - increment_bulk_code_usage()"
    echo "  - decrement_bulk_code_usage()"
    echo "  - cleanup_inactive_sessions()"
    echo "‚Ä¢ Ensure the access_codes table has the required columns:"
    echo "  - usage_count (integer)"
    echo "  - max_usage_count (integer)"
    echo "  - type (enum including 'bulk')"
    echo "‚Ä¢ Check that your service role key has sufficient permissions"
fi

exit $TEST_EXIT_CODE